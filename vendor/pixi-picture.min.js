var pixi_picture,__extends=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var t in r)r.hasOwnProperty(t)&&(e[t]=r[t])};return function(r,t){function n(){this.constructor=r}e(r,t),r.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}}();!function(e){function r(e,r){var t=this.renderer,n=this.filterData;if(!n){n=this.renderer._activeRenderTarget.filterStack;var i=new a;i.sourceFrame=i.destinationFrame=this.renderer._activeRenderTarget.size,i.renderTarget=t._activeRenderTarget,this.renderer._activeRenderTarget.filterData=n={index:0,stack:[i]},this.filterData=n}var o=n.stack[++n.index],u=n.stack[0].destinationFrame;o||(o=n.stack[n.index]=new a);var s=e.filterArea&&0===e.filterArea.x&&0===e.filterArea.y&&e.filterArea.width===t.screen.width&&e.filterArea.height===t.screen.height,d=r[0].resolution,l=0|r[0].padding,c=s?t.screen:e.filterArea||e.getBounds(!0),h=o.sourceFrame,p=o.destinationFrame;h.x=(c.x*d|0)/d,h.y=(c.y*d|0)/d,h.width=(c.width*d|0)/d,h.height=(c.height*d|0)/d,s||(n.stack[0].renderTarget.transform||r[0].autoFit&&h.fit(u),h.pad(l));for(var f=0;f<r.length;f++){var v=null;r[f].backdropUniformName&&(null===v&&(v=this.prepareBackdrop(h)),r[f]._backdropRenderTarget=v)}p.width=h.width,p.height=h.height;var g=this.getPotRenderTarget(t.gl,h.width,h.height,d);o.target=e,o.filters=r,o.resolution=d,o.renderTarget=g,g.setFrame(p,h),t.bindRenderTarget(g),g.clear(r[r.length-1].clearColor)}function t(){var e=this.filterData,r=e.stack[e.index-1],t=e.stack[e.index];this.quad.map(t.renderTarget.size,t.sourceFrame).upload();var n=t.filters;if(1===n.length)n[0].apply(this,t.renderTarget,r.renderTarget,!1,t),this.freePotRenderTarget(t.renderTarget);else{var i=t.renderTarget,a=this.getPotRenderTarget(this.renderer.gl,t.sourceFrame.width,t.sourceFrame.height,t.resolution);a.setFrame(t.destinationFrame,t.sourceFrame),a.clear();var o=0;for(o=0;o<n.length-1;++o){n[o].apply(this,i,a,!0,t);var u=i;i=a,a=u}n[o].apply(this,i,r.renderTarget,!1,t),this.freePotRenderTarget(i),this.freePotRenderTarget(a)}t.clear();var s=!1;for(o=0;o<n.length;o++)n[o]._backdropRenderTarget&&(s||(this.freePotRenderTarget(n[o]._backdropRenderTarget),s=!0),n[o]._backdropRenderTarget=null);e.index--,0===e.index&&(this.filterData=null)}function n(e,r){var t,n=this.renderer,i=n.gl,a=r.uniformData,o=r.uniforms,u=1;if(e.uniforms.filterArea){t=this.filterData.stack[this.filterData.index];var s=e.uniforms.filterArea;s[0]=t.renderTarget.size.width,s[1]=t.renderTarget.size.height,s[2]=t.sourceFrame.x,s[3]=t.sourceFrame.y,e.uniforms.filterArea=s}if(e.uniforms.filterClamp){t=t||this.filterData.stack[this.filterData.index];var d=e.uniforms.filterClamp;d[0]=0,d[1]=0,d[2]=(t.sourceFrame.width-1)/t.renderTarget.size.width,d[3]=(t.sourceFrame.height-1)/t.renderTarget.size.height,e.uniforms.filterClamp=d}for(var l in a)if(e.uniforms.data[l])if(l!==r.backdropUniformName){var c=a[l].type;if("sampler2d"===c&&0!==o[l]){if(o[l].baseTexture)e.uniforms[l]=this.renderer.bindTexture(o[l].baseTexture,u);else{e.uniforms[l]=u;var h=this.renderer.gl;n.boundTextures[u]=n.emptyTextures[u],h.activeTexture(h.TEXTURE0+u),o[l].texture.bind()}u++}else if("mat3"===c)void 0!==o[l].a?e.uniforms[l]=o[l].toArray(!0):e.uniforms[l]=o[l];else if("vec2"===c)if(void 0!==o[l].x){var p=e.uniforms[l]||new Float32Array(2);p[0]=o[l].x,p[1]=o[l].y,e.uniforms[l]=p}else e.uniforms[l]=o[l];else"float"===c?e.uniforms.data[l].value!==a[l]&&(e.uniforms[l]=o[l]):e.uniforms[l]=o[l]}else{var f=r._backdropRenderTarget;e.uniforms[l]=u,n.boundTextures[u]=n.emptyTextures[u],i.activeTexture(i.TEXTURE0+u),i.bindTexture(i.TEXTURE_2D,f.texture.texture),u++}}function i(e){var r=this.renderer,t=r._activeRenderTarget;if(t.root)return null;var n=t.resolution,i=t.sourceFrame||t.destinationFrame;e.fit(i);var a=(e.x-i.x)*n,o=(e.y-i.y)*n,u=e.width*n,s=e.height*n,d=r.gl,l=this.getPotRenderTarget(d,u,s,1);return r.boundTextures[1]=r.emptyTextures[1],d.activeTexture(d.TEXTURE0+1),d.bindTexture(d.TEXTURE_2D,l.texture.texture),l.rebound||(r._activeRenderTarget=null,r.bindRenderTarget(t),l.rebound=!0),d.copyTexSubImage2D(d.TEXTURE_2D,0,0,0,a,o,u,s),l}e.filterManagerMixin=function(e){e.prepareBackdrop||(e.pushFilter=r,e.popFilter=t,e.syncUniforms=n,e.prepareBackdrop=i)};var a=function(){function e(){this.renderTarget=null,this.target=null,this.resolution=1,this.sourceFrame=new PIXI.Rectangle,this.destinationFrame=new PIXI.Rectangle,this.filters=[]}return e.prototype.clear=function(){this.filters=null,this.target=null,this.renderTarget=null},e}(),o=function(e){function r(){var r=null!==e&&e.apply(this,arguments)||this;return r.backdropUniformName=null,r._backdropRenderTarget=null,r.clearColor=null,r}return __extends(r,e),r}(PIXI.Filter);e.BackdropFilter=o}(pixi_picture||(pixi_picture={})),function(e){var r=[{vertUniforms:"",vertCode:"vTextureCoord = aTextureCoord;",fragUniforms:"uniform vec4 uTextureClamp;",fragCode:"vec2 textureCoord = clamp(vTextureCoord, uTextureClamp.xy, uTextureClamp.zw);"},{vertUniforms:"uniform mat3 uTransform;",vertCode:"vTextureCoord = (uTransform * vec3(aTextureCoord, 1.0)).xy;",fragUniforms:"",fragCode:"vec2 textureCoord = vTextureCoord;"},{vertUniforms:"uniform mat3 uTransform;",vertCode:"vTextureCoord = (uTransform * vec3(aTextureCoord, 1.0)).xy;",fragUniforms:"uniform mat3 uMapCoord;\nuniform vec4 uClampFrame;\nuniform vec2 uClampOffset;",fragCode:"vec2 textureCoord = mod(vTextureCoord - uClampOffset, vec2(1.0, 1.0)) + uClampOffset;\ntextureCoord = (uMapCoord * vec3(textureCoord, 1.0)).xy;\ntextureCoord = clamp(textureCoord, uClampFrame.xy, uClampFrame.zw);"}],t=function(e){function t(t,n,i,a){var o=this,u=r[a];return(o=e.call(this,t,n.replace(/%SPRITE_UNIFORMS%/gi,u.vertUniforms).replace(/%SPRITE_CODE%/gi,u.vertCode),i.replace(/%SPRITE_UNIFORMS%/gi,u.fragUniforms).replace(/%SPRITE_CODE%/gi,u.fragCode))||this).bind(),o.tilingMode=a,o.tempQuad=new PIXI.Quad(t),o.tempQuad.initVao(o),o.uniforms.uColor=new Float32Array([1,1,1,1]),o.uniforms.uSampler=[0,1],o}return __extends(t,e),t.blendVert="\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nuniform mat3 projectionMatrix;\nuniform mat3 mapMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vMapCoord;\n%SPRITE_UNIFORMS%\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    %SPRITE_CODE%\n    vMapCoord = (mapMatrix * vec3(aVertexPosition, 1.0)).xy;\n}\n",t}(PIXI.Shader);e.PictureShader=t}(pixi_picture||(pixi_picture={})),function(e){var r="\nvarying vec2 vTextureCoord;\nvarying vec2 vMapCoord;\nvarying vec4 vColor;\n\nuniform sampler2D uSampler[2];\nuniform vec4 uColor;\n%SPRITE_UNIFORMS%\n\nvoid main(void)\n{\n    %SPRITE_CODE%\n    vec4 source = texture2D(uSampler[0], textureCoord) * uColor;\n    vec4 target = texture2D(uSampler[1], vMapCoord);\n\n    //reverse hardlight\n    if (source.a == 0.0) {\n        gl_FragColor = vec4(0, 0, 0, 0);\n        return;\n    }\n    //yeah, premultiplied\n    vec3 Cb = source.rgb/source.a, Cs;\n    if (target.a > 0.0) {\n        Cs = target.rgb / target.a;\n    }\n    vec3 multiply = Cb * Cs * 2.0;\n    vec3 Cs2 = Cs * 2.0 - 1.0;\n    vec3 screen = Cb + Cs2 - Cb * Cs2;\n    vec3 B;\n    if (Cb.r <= 0.5) {\n        B.r = multiply.r;\n    } else {\n        B.r = screen.r;\n    }\n    if (Cb.g <= 0.5) {\n        B.g = multiply.g;\n    } else {\n        B.g = screen.g;\n    }\n    if (Cb.b <= 0.5) {\n        B.b = multiply.b;\n    } else {\n        B.b = screen.b;\n    }\n    vec4 res;\n    res.xyz = (1.0 - source.a) * Cs + source.a * B;\n    res.a = source.a + target.a * (1.0-source.a);\n    gl_FragColor = vec4(res.xyz * res.a, res.a);\n}\n",t=function(t){function n(n,i){return t.call(this,n,e.PictureShader.blendVert,r,i)||this}return __extends(n,t),n}(e.PictureShader);e.HardLightShader=t}(pixi_picture||(pixi_picture={})),function(e){e.mapFilterBlendModesToPixi=function(r,t){return void 0===t&&(t=[]),t[PIXI.BLEND_MODES.OVERLAY]=[new e.OverlayShader(r,0),new e.OverlayShader(r,1),new e.OverlayShader(r,2)],t[PIXI.BLEND_MODES.HARD_LIGHT]=[new e.HardLightShader(r,0),new e.HardLightShader(r,1),new e.HardLightShader(r,2)],t[PIXI.BLEND_MODES.SOFT_LIGHT]=[new e.SoftLightShader(r,0),new e.SoftLightShader(r,1),new e.SoftLightShader(r,2)],t}}(pixi_picture||(pixi_picture={})),function(e){var r="\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nuniform sampler2D uSampler[2];\nuniform vec4 uColor;\n%SPRITE_UNIFORMS%\n\nvoid main(void)\n{\n    %SPRITE_CODE%\n\n    vec4 sample = texture2D(uSampler[0], textureCoord);\n    gl_FragColor = sample * uColor;\n}\n",t="\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n%SPRITE_UNIFORMS%\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    %SPRITE_CODE%\n}\n",n=function(e){function n(n,i){return e.call(this,n,t,r,i)||this}return __extends(n,e),n}(e.PictureShader);e.NormalShader=n}(pixi_picture||(pixi_picture={})),function(e){var r="\nvarying vec2 vTextureCoord;\nvarying vec2 vMapCoord;\nvarying vec4 vColor;\n\nuniform sampler2D uSampler[2];\nuniform vec4 uColor;\n%SPRITE_UNIFORMS%\n\nvoid main(void)\n{\n    %SPRITE_CODE%\n    vec4 source = texture2D(uSampler[0], textureCoord) * uColor;\n    vec4 target = texture2D(uSampler[1], vMapCoord);\n\n    //reverse hardlight\n    if (source.a == 0.0) {\n        gl_FragColor = vec4(0, 0, 0, 0);\n        return;\n    }\n    //yeah, premultiplied\n    vec3 Cb = source.rgb/source.a, Cs;\n    if (target.a > 0.0) {\n        Cs = target.rgb / target.a;\n    }\n    vec3 multiply = Cb * Cs * 2.0;\n    vec3 Cb2 = Cb * 2.0 - 1.0;\n    vec3 screen = Cb2 + Cs - Cb2 * Cs;\n    vec3 B;\n    if (Cs.r <= 0.5) {\n        B.r = multiply.r;\n    } else {\n        B.r = screen.r;\n    }\n    if (Cs.g <= 0.5) {\n        B.g = multiply.g;\n    } else {\n        B.g = screen.g;\n    }\n    if (Cs.b <= 0.5) {\n        B.b = multiply.b;\n    } else {\n        B.b = screen.b;\n    }\n    vec4 res;\n    res.xyz = (1.0 - source.a) * Cs + source.a * B;\n    res.a = source.a + target.a * (1.0-source.a);\n    gl_FragColor = vec4(res.xyz * res.a, res.a);\n}\n",t=function(t){function n(n,i){return t.call(this,n,e.PictureShader.blendVert,r,i)||this}return __extends(n,t),n}(e.PictureShader);e.OverlayShader=t}(pixi_picture||(pixi_picture={})),function(e){var r=PIXI.WRAP_MODES;function t(e){return e+=0===e?1:0,--e,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,(e|=e>>>16)+1}var n=function(n){function i(e){return n.call(this,e)||this}return __extends(i,n),i.prototype.onContextChange=function(){e.filterManagerMixin(this.renderer.filterManager);var r=this.renderer.gl;this.drawModes=e.mapFilterBlendModesToPixi(r),this.normalShader=[new e.NormalShader(r,0),new e.NormalShader(r,1),new e.NormalShader(r,2)],this._tempClamp=new Float32Array(4),this._tempColor=new Float32Array(4),this._tempRect=new PIXI.Rectangle,this._tempRect2=new PIXI.Rectangle,this._tempRect3=new PIXI.Rectangle,this._tempMatrix=new PIXI.Matrix,this._tempMatrix2=new PIXI.Matrix,this._bigBuf=new Uint8Array(1<<20),this._renderTexture=new PIXI.BaseRenderTexture(1024,1024)},i.prototype.start=function(){},i.prototype.flush=function(){},i.prototype._getRenderTexture=function(e,r){return(this._renderTexture.width<e||this._renderTexture.height<r)&&(e=t(e),r=t(r),this._renderTexture.resize(e,r)),this._renderTexture},i.prototype._getBuf=function(e){var r=this._bigBuf;return r.length<e&&(e=t(e),r=new Uint8Array(e),this._bigBuf=r),r},i.prototype.render=function(e){if(e.texture.valid){var r=0;e.tileTransform&&(r=this._isSimpleSprite(e)?1:2);var t=this.drawModes[e.blendMode];t?this._renderBlend(e,t[r]):this._renderNormal(e,this.normalShader[r])}},i.prototype._renderNormal=function(e,r){var t=this.renderer;t.bindShader(r),t.state.setBlendMode(e.blendMode),this._renderInner(e,r)},i.prototype._renderBlend=function(e,r){var t=this.renderer,n=e.getBounds(),i=t._activeRenderTarget,a=i.projectionMatrix,o=a.a<0,u=a.d<0,s=i.resolution,d=this._tempRect,l=i.sourceFrame||i.destinationFrame;d.x=0,d.y=0,d.width=l.width*s,d.height=l.height*s;var c=this._tempRect2,h=l.width*s,p=l.height*s;c.x=(n.x+a.tx/a.a)*s+h/2,c.y=(n.y+a.ty/a.d)*s+p/2,c.width=n.width*s,c.height=n.height*s,o&&(c.y=h-c.width-c.x),u&&(c.y=p-c.height-c.y);this._tempRect3;var f=Math.floor(Math.max(d.x,c.x)),v=Math.ceil(Math.min(d.x+d.width,c.x+c.width)),g=Math.floor(Math.max(d.y,c.y)),m=v-f,x=Math.ceil(Math.min(d.y+d.height,c.y+c.height))-g;if(!(m<=0||x<=0)){var C=this._getRenderTexture(m,x);t.bindTexture(C,1,!0);var _=t.gl;if(t.renderingToScreen&&i.root){this._getBuf(m*x*4);_.readPixels(f,g,m,x,_.RGBA,_.UNSIGNED_BYTE,this._bigBuf),_.texSubImage2D(_.TEXTURE_2D,0,0,0,m,x,_.RGBA,_.UNSIGNED_BYTE,this._bigBuf)}else _.copyTexSubImage2D(_.TEXTURE_2D,0,0,0,f,g,m,x);if(t.bindShader(r),t.state.setBlendMode(PIXI.BLEND_MODES.NORMAL),r.uniforms.mapMatrix){var T=this._tempMatrix;T.a=c.width/C.width/n.width,o?(T.a=-T.a,T.tx=(c.x-f)/C.width-(n.x+n.width)*T.a):T.tx=(c.x-f)/C.width-n.x*T.a,T.d=c.height/C.height/n.height,u?(T.d=-T.d,T.ty=(c.y-g)/C.height-(n.y+n.height)*T.d):T.ty=(c.y-g)/C.height-n.y*T.d,r.uniforms.mapMatrix=T.toArray(!0)}this._renderInner(e,r)}},i.prototype._renderInner=function(e,r){this.renderer;r.tilingMode>0?this._renderWithShader(e,1===r.tilingMode,r):this._renderSprite(e,r)},i.prototype._renderWithShader=function(e,r,t){var n=t.tempQuad,i=this.renderer;i.bindVao(n.vao);var a=n.vertices,o=e._width,u=e._height,s=e._anchor._x,d=e._anchor._y,l=o*(1-s),c=o*-s,h=u*(1-d),p=u*-d,f=e.transform.worldTransform,v=f.a,g=f.b,m=f.c,x=f.d,C=f.tx,_=f.ty;a[0]=v*c+m*p+C,a[1]=x*p+g*c+_,a[2]=v*l+m*p+C,a[3]=x*p+g*l+_,a[4]=v*l+m*h+C,a[5]=x*h+g*l+_,a[6]=v*c+m*h+C,a[7]=x*h+g*c+_,(a=n.uvs)[0]=a[6]=-e.anchor.x,a[1]=a[3]=-e.anchor.y,a[2]=a[4]=1-e.anchor.x,a[5]=a[7]=1-e.anchor.y,n.upload();var T=e._texture,b=e.tileTransform.localTransform,y=e.uvTransform,S=y.mapCoord,I=y.uClampFrame,R=y.uClampOffset,w=T.width,P=T.height,M=o,D=u,E=this._tempMatrix2;E.set(b.a*w/M,b.b*w/D,b.c*P/M,b.d*P/D,b.tx/M,b.ty/D),E.invert(),r?E.append(S):(t.uniforms.uMapCoord=S.toArray(!0),t.uniforms.uClampFrame=I,t.uniforms.uClampOffset=R),t.uniforms.uTransform=E.toArray(!0);var F=this._tempColor,B=e.worldAlpha;PIXI.utils.hex2rgb(e.tint,F),F[0]*=B,F[1]*=B,F[2]*=B,F[3]=B,t.uniforms.uColor=F,i.bindTexture(T,0,!0),n.vao.draw(this.renderer.gl.TRIANGLES,6,0)},i.prototype._renderSprite=function(e,r){var t=this.renderer,n=r.tempQuad;t.bindVao(n.vao);for(var i=e.texture._uvs,a=(n.vertices,e.vertexData),o=0;o<8;o++)n.vertices[o]=a[o];n.uvs[0]=i.x0,n.uvs[1]=i.y0,n.uvs[2]=i.x1,n.uvs[3]=i.y1,n.uvs[4]=i.x2,n.uvs[5]=i.y2,n.uvs[6]=i.x3,n.uvs[7]=i.y3,n.upload();var u=e.texture.frame,s=e.texture.baseTexture,d=this._tempClamp,l=.5/s.resolution;d[0]=(u.x+l)/s.width,d[1]=(u.y+l)/s.height,d[2]=(u.x+u.width-l)/s.width,d[3]=(u.y+u.height-l)/s.height,r.uniforms.uTextureClamp=d;var c=this._tempColor;PIXI.utils.hex2rgb(e.tint,c);var h=e.worldAlpha;c[0]*=h,c[1]*=h,c[2]*=h,c[3]=h,r.uniforms.uColor=c,t.bindTexture(s,0,!0),n.vao.draw(this.renderer.gl.TRIANGLES,6,0)},i.prototype._isSimpleSprite=function(e){var t=this.renderer,n=e._texture,i=n.baseTexture,a=i.isPowerOfTwo&&n.frame.width===i.width&&n.frame.height===i.height;return a&&(i._glTextures[t.CONTEXT_UID]?a=i.wrapMode!==r.CLAMP:i.wrapMode===r.CLAMP&&(i.wrapMode=r.REPEAT)),a},i}(PIXI.ObjectRenderer);e.PictureRenderer=n,PIXI.WebGLRenderer.registerPlugin("picture",n),PIXI.CanvasRenderer.registerPlugin("picture",PIXI.CanvasSpriteRenderer)}(pixi_picture||(pixi_picture={})),function(e){var r="\nvarying vec2 vTextureCoord;\nvarying vec2 vMapCoord;\nvarying vec4 vColor;\n \nuniform sampler2D uSampler[2];\nuniform vec4 uColor;\n%SPRITE_UNIFORMS%\n\nvoid main(void)\n{\n    %SPRITE_CODE%\n    vec4 source = texture2D(uSampler[0], textureCoord) * uColor;\n    vec4 target = texture2D(uSampler[1], vMapCoord);\n\n    if (source.a == 0.0) {\n        gl_FragColor = vec4(0, 0, 0, 0);\n        return;\n    }\n    vec3 Cb = source.rgb/source.a, Cs;\n    if (target.a > 0.0) {\n        Cs = target.rgb / target.a;\n    }\n    \n    vec3 first = Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\n\n    vec3 B;\n    vec3 D;\n    if (Cs.r <= 0.5)\n    {\n        B.r = first.r;\n    }\n    else\n    {\n        if (Cb.r <= 0.25)\n        {\n            D.r = ((16.0 * Cb.r - 12.0) * Cb.r + 4.0) * Cb.r;    \n        }\n        else\n        {\n            D.r = sqrt(Cb.r);\n        }\n        B.r = Cb.r + (2.0 * Cs.r - 1.0) * (D.r - Cb.r);\n    }\n    if (Cs.g <= 0.5)\n    {\n        B.g = first.g;\n    }\n    else\n    {\n        if (Cb.g <= 0.25)\n        {\n            D.g = ((16.0 * Cb.g - 12.0) * Cb.g + 4.0) * Cb.g;    \n        }\n        else\n        {\n            D.g = sqrt(Cb.g);\n        }\n        B.g = Cb.g + (2.0 * Cs.g - 1.0) * (D.g - Cb.g);\n    }\n    if (Cs.b <= 0.5)\n    {\n        B.b = first.b;\n    }\n    else\n    {\n        if (Cb.b <= 0.25)\n        {\n            D.b = ((16.0 * Cb.b - 12.0) * Cb.b + 4.0) * Cb.b;    \n        }\n        else\n        {\n            D.b = sqrt(Cb.b);\n        }\n        B.b = Cb.b + (2.0 * Cs.b - 1.0) * (D.b - Cb.b);\n    }   \n\n    vec4 res;\n\n    res.xyz = (1.0 - source.a) * Cs + source.a * B;\n    res.a = source.a + target.a * (1.0-source.a);\n    gl_FragColor = vec4(res.xyz * res.a, res.a);\n}\n",t=function(t){function n(n,i){return t.call(this,n,e.PictureShader.blendVert,r,i)||this}return __extends(n,t),n}(e.PictureShader);e.SoftLightShader=t}(pixi_picture||(pixi_picture={})),function(e){var r=function(e){function r(r){var t=e.call(this,r)||this;return t.pluginName="picture",t}return __extends(r,e),r}(PIXI.Sprite);e.Sprite=r}(pixi_picture||(pixi_picture={})),function(e){var r=function(e){function r(r){var t=e.call(this,r)||this;return t.pluginName="picture",t}return __extends(r,e),r}(PIXI.extras.TilingSprite);e.TilingSprite=r}(pixi_picture||(pixi_picture={})),function(e){PIXI.picture=e}(pixi_picture||(pixi_picture={}));